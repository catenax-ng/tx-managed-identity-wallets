version: '3'

services:
  local_postgres:
    build:
      context: .
      dockerfile: db.Dockerfile
    container_name: local_postgres
    env_file:
      - ../../dev.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  local_keycloak:
    image: jboss/keycloak:16.1.1
    container_name: local_keycloak
    env_file:
      - ../../dev.env
    volumes:
      - ./keycloak/local-realm.json:/tmp/local-realm.json
    ports:
      - "8081:8080"

  # This wallet must have the endorser role
  local_base_acapy:
    image: bcgovimages/aries-cloudagent:py36-1.16-1_0.7.5
    container_name: local_base_acapy
    ports:
      - "11000:11000"
      - "8000:8000"
    env_file:
      - ../../dev.env
    depends_on:
      - local_postgres
    entrypoint: /bin/bash
    command: [
       "-c",
       "aca-py start \
        -e ${ACAPY_ENDORSER_ENDPOINT} \
        --auto-provision \
        --inbound-transport http '0.0.0.0' ${ACAPY_ENDORSER_CONNECTION_PORT} \
        --outbound-transport http \
        --admin '0.0.0.0' ${ACAPY_ENDORSER_ADMIN_PORT} \
        --wallet-name Local_Base_Wallet \
        --wallet-type askar \
        --wallet-key ${ACAPY_ENDORSER_WALLET_KEY} \
        --wallet-storage-type postgres_storage
        --wallet-storage-config '{\"url\":\"local_postgres:5432\",\"max_connections\":5}'
        --wallet-storage-creds '{\"account\":\"${POSTGRES_USER}\",\"password\":\"${POSTGRES_PASSWORD}\",\"admin_account\":\"${POSTGRES_USER}\",\"admin_password\":\"${POSTGRES_PASSWORD}\"}'
        --seed '${ACAPY_ENDORSER_SEED}' \
        --genesis-url ${ACAPY_ENDORSER_LEDGER_URL} \
        --label Local_Base_Wallet \
        --admin-api-key '${ACAPY_BASE_WALLET_ADMIN_API_KEY}' \
        --auto-ping-connection \
        --jwt-secret '${ACAPY_ENDORSER_JWT_SECRET}' \
        --public-invites \
        --endorser-protocol-role endorser \
        --auto-endorse-transactions \
        --log-level DEBUG"
    ]

  # The management multi-tenancy wallet must be registered on ledger 
  local_mt_acapy:
    image: bcgovimages/aries-cloudagent:py36-1.16-1_0.7.5
    container_name: local_mt_acapy
    ports:
      - "11003:11003"
      - "8003:8003"
    env_file:
      - ../../dev.env      
    depends_on:
      - local_postgres
    entrypoint: /bin/bash
    command: [
       "-c",
       "aca-py start \
        -e ${ACAPY_MT_ENDPOINT} \
        --auto-provision \
        --inbound-transport http '0.0.0.0' ${ACAPY_MT_CONNECTION_PORT} \
        --outbound-transport http \
        --admin '0.0.0.0' ${ACAPY_MT_ADMIN_PORT} \
        --wallet-name local_managed \
        --wallet-type askar \
        --wallet-key ${ACAPY_MT_WALLET_KEY} \
        --wallet-storage-type postgres_storage
        --wallet-storage-config '{\"url\":\"local_postgres:5432\",\"max_connections\":5}'
        --wallet-storage-creds '{\"account\":\"${POSTGRES_USER}\",\"password\":\"${POSTGRES_PASSWORD}\",\"admin_account\":\"${POSTGRES_USER}\",\"admin_password\":\"${POSTGRES_PASSWORD}\"}'
        --seed '${ACAPY_MT_SEED}' \
        --genesis-url ${ACAPY_MT_LEDGER_URL} \
        --label LocalManagedWallets \
        --admin-api-key '${ACAPY_ADMIN_API_KEY}' \
        --auto-ping-connection \
        --jwt-secret '${ACAPY_MT_JWT_SECRET}' \
        --multitenant \
        --multitenant-admin \
        --public-invites \
        --webhook-url http://host.docker.internal:8080/webhook \
        --endorser-protocol-role author \
        --endorser-alias endorser \
        --endorser-public-did ${MIW_SHORT_DID} \
        --auto-request-endorsement \
        --auto-write-transactions \
        --auto-promote-author-did \
        --log-level DEBUG"
    ]

  # must be registered on ledger and have an endpoint service a
  test_acapy:
    image: bcgovimages/aries-cloudagent:py36-1.16-1_0.7.5
    container_name: test_acapy
    ports:
      - "11001:11001"
      - "8001:8001"
    env_file:
      - ../../dev.env
    entrypoint: /bin/bash
    command: [
       "-c",
       "aca-py start \
        -e ${ACAPY_TEST_ENDPOINT} \
        --auto-provision \
        --inbound-transport http '0.0.0.0' ${ACAPY_TEST_CONNECTION_PORT} \
        --outbound-transport http \
        --admin '0.0.0.0' ${ACAPY_TEST_ADMIN_PORT} \
        --wallet-name TestWallet \
        --wallet-type askar \
        --wallet-key ${ACAPY_TEST_WALLET_KEY} \
        --seed '${ACAPY_TEST_SEED}' \
        --genesis-url ${ACAPY_TEST_LEDGER_URL} \
        --label TestWallet \
        --admin-api-key '${ACAPY_TEST_ADMIN_KEY}' \
        --auto-ping-connection \
        --jwt-secret '${ACAPY_TEST_JWT_SECRET}' \
        --public-invites \
        --log-level DEBUG",
    ]

  local_revocation_service:
    image: registry.gitlab.com/gaia-x/data-infrastructure-federation-services/not/notarization-service/revocation:1.0.0-SNAPSHOT-quarkus-2.10.2.Final-java17
    container_name: local_revocation_service
    ports:
      - "8086:8086"
    depends_on:
      - local_postgres
    env_file:
      - ../../dev.env  
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: ${QUARKUS_DATASOURCE_JDBC_URL}
      QUARKUS_HTTP_PORT: 8086
      QUARKUS_HTTP_ACCESS_LOG_ENABLED: "true"
      REVOCATION_BASE_URL: http://localhost:8080/api/credentials/
      REVOCATION_MIN_ISSUE_INTERVAL: 2
      QUARKUS_REST_CLIENT_SSI_ISSUANCE_API_URL: "${SSI_SERVICE_URL:-http://host.docker.internal:8080}"

volumes:
  postgres-data:
